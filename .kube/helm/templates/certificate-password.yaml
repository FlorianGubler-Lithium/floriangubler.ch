apiVersion: v1
kind: Secret
metadata:
  labels:
    app: {{ .Values.appName }}
  # NOTE: "name" must be kept in sync with "$name" on line 13.
  name: {{ .Values.appName }}-certificate-password
data:
    # https://itnext.io/manage-auto-generated-secrets-in-your-helm-charts-5aee48ba6918
    # https://helm.sh/docs/chart_template_guide/functions_and_pipelines/
    # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    # NOTE: "$name" must be kept in sync with "name" on line 7.
    {{- $name := printf "%s-certificate-password" .Values.applicationName }}
    {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $name) | default dict }}
    {{- $secretData := (get $secretObj "data") | default dict }}
    # set $pw to existing password or generate a random one when not exists
    {{- $pw := $secretData.password | default (randAlphaNum 20 | b64enc) }}
    password: {{ $pw | quote }}